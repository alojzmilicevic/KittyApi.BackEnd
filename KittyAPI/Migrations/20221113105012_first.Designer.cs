// <auto-generated />
using KittyAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KittyAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221113105012_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KittyAPI.Models.Stream", b =>
                {
                    b.Property<string>("StreamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StreamTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamerUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ThumbnailId")
                        .HasColumnType("int");

                    b.HasKey("StreamId");

                    b.HasIndex("StreamerUserId");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Streams");
                });

            modelBuilder.Entity("KittyAPI.Models.StreamUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StreamId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "StreamId");

                    b.HasIndex("StreamId");

                    b.ToTable("StreamUsers");
                });

            modelBuilder.Entity("KittyAPI.Models.Thumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ThumbnailName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Thumbnails");
                });

            modelBuilder.Entity("KittyAPI.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KittyAPI.Models.Stream", b =>
                {
                    b.HasOne("KittyAPI.Models.User", "Streamer")
                        .WithMany()
                        .HasForeignKey("StreamerUserId");

                    b.HasOne("KittyAPI.Models.Thumbnail", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Streamer");

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("KittyAPI.Models.StreamUser", b =>
                {
                    b.HasOne("KittyAPI.Models.Stream", "Stream")
                        .WithMany("Participants")
                        .HasForeignKey("StreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KittyAPI.Models.User", "User")
                        .WithMany("Streams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stream");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KittyAPI.Models.Stream", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("KittyAPI.Models.User", b =>
                {
                    b.Navigation("Streams");
                });
#pragma warning restore 612, 618
        }
    }
}
